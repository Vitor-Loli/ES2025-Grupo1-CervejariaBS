name: Move to "In Progress" when assigned

on:
  issues:
    types: [assigned]

jobs:
  move-to-in-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to "In Progress"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectNumber = 7; // n√∫mero do seu Project v2
            const username = "Vitor-Loli"; // seu usu√°rio do GitHub
            const columnName = "In Progress";

            // üîπ Busca o ID do seu projeto e o campo "Status"
            const queryProject = `
              query($login: String!, $number: Int!) {
                user(login: $login) {
                  projectV2(number: $number) {
                    id
                    fields(first: 50) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }`;

            const projectResponse = await github.graphql(queryProject, {
              login: username,
              number: projectNumber
            });

            const project = projectResponse.user.projectV2;
            if (!project) {
              core.setFailed(`‚ùå Projeto n√∫mero ${projectNumber} n√£o encontrado para o usu√°rio ${username}.`);
              return;
            }

            const statusField = project.fields.nodes.find(f => f.name === "Status");
            if (!statusField) {
              core.setFailed('‚ùå Campo "Status" n√£o encontrado no projeto.');
              return;
            }

            const option = statusField.options.find(o => o.name === columnName);
            if (!option) {
              core.setFailed(`‚ùå Op√ß√£o "${columnName}" n√£o encontrada no campo "Status".`);
              return;
            }

            // üîπ Busca o item do projeto associado √† issue
            const queryIssue = `
              query($owner: String!, $repo: String!, $issue: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issue) {
                    id
                    projectItems(first: 20) {
                      nodes {
                        id
                        project {
                          number
                        }
                      }
                    }
                  }
                }
              }`;

            const issueResponse = await github.graphql(queryIssue, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue: context.issue.number
            });

            const issue = issueResponse.repository.issue;
            const projectItem = issue.projectItems.nodes.find(p => p.project.number === projectNumber);

            if (!projectItem) {
              core.warning("‚ö†Ô∏è Esta issue ainda n√£o est√° vinculada ao Project V2 especificado.");
              return;
            }

            // üîπ Atualiza o campo de status do item
            const mutation = `
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }`;

            await github.graphql(mutation, {
              projectId: project.id,
              itemId: projectItem.id,
              fieldId: statusField.id,
              optionId: option.id
            });

            core.notice(`‚úÖ Issue movido para "${columnName}" com sucesso.`);
