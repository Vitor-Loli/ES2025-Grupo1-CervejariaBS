name: Move to "In Progress" when assigned

on:
  issues:
    types: [assigned]

jobs:
  move-to-in-progress:
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to "In Progress"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectNumber = 6; // número do seu Project v2
            const org = "SUA_ORGANIZACAO_OU_USER"; // ex: "logae"
            const columnName = "In Progress";

            // Busca o ID do projeto
            const { organization } = await github.graphql(`
              query($org: String!, $number: Int!) {
                organization(login: $org) {
                  projectV2(number: $number) {
                    id
                    fields(first: 50) {
                      nodes {
                        id
                        name
                        dataType
                        ... on ProjectV2SingleSelectField {
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }
            `, { org, number: projectNumber });

            const project = organization.projectV2;
            const statusField = project.fields.nodes.find(f => f.name === "Status");
            const option = statusField.options.find(o => o.name === columnName);

            // Busca o item do projeto associado à issue
            const { repository } = await github.graphql(`
              query($owner: String!, $repo: String!, $issue: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issue) {
                    id
                    projectItems(first: 10) {
                      nodes {
                        id
                        project {
                          number
                        }
                      }
                    }
                  }
                }
              }
            `, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue: context.issue.number
            });

            const issue = repository.issue;
            const projectItem = issue.projectItems.nodes.find(p => p.project.number === projectNumber);

            if (!projectItem) {
              core.warning("Este issue não está em um item do Project V2 especificado.");
              return;
            }

            // Atualiza o campo de status
            await github.graphql(`
              mutation($itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: "${project.id}",
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              itemId: projectItem.id,
              fieldId: statusField.id,
              optionId: option.id
            });

            core.notice(`Issue movido para "${columnName}" com sucesso.`);
